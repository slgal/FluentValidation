<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.1;netstandard2.0;net45</TargetFrameworks>
    <Authors>Jeremy Skinner</Authors>
    <Company />
    <Description>A validation library for .NET that uses a fluent interface to construct strongly-typed validation rules.</Description>
    <Copyright>Copyright (c) Jeremy Skinner 2008-2018</Copyright>
    <PackageProjectUrl>http://github.com/JeremySkinner/fluentvalidation</PackageProjectUrl>
    <PackageIconUrl>https://raw.githubusercontent.com/JeremySkinner/FluentValidation/master/fv-small.png</PackageIconUrl>
    <PackageReleaseNotes>
Changes in 7.5:
* Better handling of clientside messages when using custom overriden language resources
* Added flag in the ValidationContext's RootDataContext when a validator is invoked by the automatic MVC/WebApi integration
* Improvements to some of the validation tester's messages
* Added Transform method to transform property values prior to validation
* Improve support for DisplayAttribute / DisplayNameAttribute when inferring property display name
* New language translations (Slovak/Hebrew/Brizilian Portuguese)
* Cache display names by default 
* Ensure ShouldHaveChildValidator test method works with model-level rules

Changes in 7.4:
* Improved syntax for DependentRules
* ValidationException serialization support when running on full framework
* Added ComparisonProperty placeholder to some validators
* The Test Helper now correctly handles read-only properties
* Add CancellationToken support to ValidateAndThrowAsync and various ValidateAsync overloads
* Improved functionality for custom MessageBuilders
* Updated AspNetCore integration to MVC version 2.0.2
* Update MVC5 AddToModelState extension not to overwrite existing attempted values
* Added SetRulesetForClientsideMessages method for MVC5/AspNetCore as an alternative to using the RulesetForClientSideMessagesAttribute
			
Changes in 7.3:
* Major changes to AspNetCore integration including better support for collections and implicit validation (opt-in)
* Fix - Updated EnumValidator's Flags support to handle the ~0 value
* Fix - TestHelper checking for child validator would respond with the wrong type
* Fix - Updated translations for some validators
* Fix - Overload of WithName that takes a lambda generated an exception
* Added versions of WhenAsync and UnlessAsync that support CancellationTokens
* Simplify calls to DependentRules
* Add Skip property to CustomizeValidatorAttribute in the ASP.NET Core integration

Changes in 7.2:
* Updated AspNetCore integration to support IValidatableObject
* Updated AspNetCore integration to allow mixing multiple validation strategies in the same model
* Updated AspNetCore integration to support RulesetForClientsideMessagesAttribute
* Fix - Property names were not generated properly for nested types when using AddFailure inside a Custom validator
* Fix - NullReferenceException when using CustomAsync but the validator is invoked synchronously
* Fix - Clientside integration in AspNetCore being resolved from the root-level service provider
* Fix - Allow empty string to be passed to OverridePropertyName

Changes in 7.1.1:
* Fix - Incorrect property name was generated when using RuleForEach combined with SetValidator
* Fix - Nesting async validators inside DependentRules didn't wait for completion

Changes in 7.1:
* New RuleFor().Custom() method as a replacement for the old, deprecated Custom method
* Improved messages in the ShouldHaveChildValidator test extension
* Test helper works with nested properties
* Additional overload of WithState allows access to collection item when used with RuleForEach
* Fix - Wrong values were generated as part of the MVC5 clientside integration for MinLength and MaxLength validators
* Fix - AssemblyScanner now excludes abstract and generic types
* Fix - InvalidCastException when using lazy WithMessage combined with RuleForEach
* WithState enhanced to allow access to the ValidationContext

Changes in 7.0:

7.0 is a major release that contains several breaking changes, especially with Localization. If you use FluentValidation's support for localization please read the updated documentation: https://github.com/JeremySkinner/FluentValidation/wiki/f.-Localization

* Localization rewrite to not require satellite assemblies
* New 'Custom' rule method replaces the root-level Custom method
* Switch to Netstandard based build process
* Assemblies are now signed / strongly named - see https://github.com/JeremySkinner/FluentValidation/wiki/l.-Strong-naming-and-signed-packages
* Fix - Possible NullReferenceException in the AspNetCore clientside integration for length validators
* Fix - Don't clear the ModelValidatorProviders collection by default in the AspNetCore integration (added new ClearValidatorProviders property to control this behaviour)
* Fix - Ensure IValidatorFactory is resolved from request scope in asp.net core integration
* Fix - Property getter that throws an exception causes validation to fail in WebApi integration
* Fix - Issue in AspNetCore integration where we tried to resolve a collection validator in some situations where a class validator should be used
* Fix - Incorrect clientside validation attributes generated for email validator and credit card validator in the asp.net core integration
* Fix - Child model validation now works in webapi integration
* Improve splitting of PascalCased property names to support uppercase character sequences
* ValidationResult.ErrorCode property now always returns the type of the PropertyValidator that generated the message, unless it's been explicitly overriden

Full release notes can be found at https://github.com/JeremySkinner/FluentValidation/blob/master/Changelog.txt
		</PackageReleaseNotes>
    <PackageLicenseUrl>https://github.com/JeremySkinner/FluentValidation/blob/master/License.txt</PackageLicenseUrl>
    <NeutralLanguage>en</NeutralLanguage>
    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>
    <SignAssembly>True</SignAssembly>
    <DelaySign>False</DelaySign>
    <AssemblyOriginatorKeyFile>../FluentValidation-Dev.snk</AssemblyOriginatorKeyFile>
    <PublicSign Condition="'$(OS)' != 'Windows_NT'">true</PublicSign>
    <DocumentationFile Condition="'$(Configuration)'=='Release'">bin\$(Configuration)\$(TargetFramework)\FluentValidation.xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup>
    <NoWarn>1701;1702;1705;1591</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\CommonAssemblyInfo.cs" Link="CommonAssemblyInfo.cs" />
  </ItemGroup>

	<ItemGroup>
		<PackageReference Include="System.ComponentModel.Annotations" Version="4.4.1"></PackageReference>
		<PackageReference Include="System.ComponentModel.Primitives" Version="4.3.0"></PackageReference>
		<PackageReference Include="System.Collections.Concurrent" Version="4.3.0"></PackageReference>
	</ItemGroup>

    <!--<ItemGroup>
      <Content Include="bin\$(Configuration)\$(TargetFramework)\**\FluentValidation.resources.dll">
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        <Link>%(RecursiveDir)%(Filename)%(Extension)</Link>
        <PackagePath>lib\</PackagePath>
      </Content>
    </ItemGroup>-->

</Project>